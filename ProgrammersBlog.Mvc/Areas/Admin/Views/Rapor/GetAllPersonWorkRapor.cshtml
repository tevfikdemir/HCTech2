@using ProgrammersBlog.Shared.Utilities.Results.ComplexTypes
@model List<ProgrammersBlog.Entities.Dtos.GetAllOperationRaporDto>
@{
    Layout = "_Layout";
    ViewBag.Title = "Operasyon Raporu";

}




<div class="card mb-4 mt-2">
    <div class="card-header">
        <i class="fas fa-table mr-1"></i>
        Operasyon Raporu
    </div>
    <div class="card-body">
        <div class="spinner-border" role="status" style="display: none;">
            <span class="sr-only">Yükleniyor...</span>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover table-condensed" id="personelworkTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Sip.Adı</th>
                        <th class="text-center">Tarih</th>
                        <th>Operasyon</th>
                        <th>Op.Id</th>
                        <th>Bağlı Operasyon</th>
                        <th class="text-center">Personel</th>
                        <th class="text-center">Hedef</th>
                        <th class="text-center">Yapılan</th>
                        <th class="text-center">Ortalama</th>
                        <th>Performans</th>
                        <th class="text-center">Beden</th>
                        <th class="text-center">Toplam Hedef</th>
                        <th class="text-center">Toplam Yapılan</th>

                        <th>Kalan İş</th>
                        <th>Stok</th>
                        <th>Tahmini Gün</th>
                        <th>Kalan Gün</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int i = 1;
                    }
                    @foreach (var item in Model)
                    {
                        <tr data-toggle="collapse" data-target="#demo@(i)" class="accordion-toggle">
                            <td>@item.Orders.OrderName</td>
                            <td class="text-right">@item.CreatedDate.ToShortDateString()</td>
                            <td>@item.OperationName</td>
                            <td>@item.OperationId</td>
                            <td>@item.ConnectOperationId</td>
                            <td>@item.PersonName</td>
                            <td class="text-center">@item.OperationTargets</td>
                            <td class="text-center">@item.TotalQuantity</td>
                            <td class="text-center">
                                @if (item.OperationCount > 0)
                                {
                                    @(item.TotalQuantity / item.OperationCount)
                                }
                                else
                                {
                                    <span>0</span>
                                }
                            </td>
                            <td class="text-center">
                                @if (item.OperationCount > 0)
                                {
                                    var percentage = ((double)item.TotalQuantity / item.OperationCount) / item.Orders.DayTarget;
                                    @percentage.ToString("P2")
                                }
                                else
                                {
                                    <span>0%</span>
                                }
                            </td>
                            <td>@item.SizeName</td>@* Beden *@
                            <td class="text-center">@item.SizeTargets</td>@* Toplam Hedef *@
                            <td class="text-center">@item.TotalOperationQuantity</td> @* Toplam Yapılan *@
                            <td class="text-center">
                                @(item.Orders.OrderQuantity - item.TotalOperationQuantity)
                            </td>
                            <td class="text-center">Volkan Stk</td>
                            <td>Volkan Tg</td>
                            <td>Volkan Kg</td>
                        </tr>
                        <tr>
                            <td colspan="12" class="hiddenRow">
                                <div class="accordian-body collapse" id="demo@(i)">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr class="info">
                                                @for (var time = new DateTime(1, 1, 1, 8, 0, 0); time < new DateTime(1, 1, 2, 0, 0, 0); time = time.AddMinutes(15))
                                                {
                                                    <th>@time.ToString("HH:mm") - @time.AddMinutes(15).ToString("HH:mm")</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                @for (var startTime = new DateTime(1, 1, 1, 8, 0, 0); startTime < new DateTime(1, 1, 2, 0, 0, 0); startTime = startTime.AddMinutes(15))
                                                {
                                                    var endTime = startTime.AddMinutes(15);
                                                    var quantityInTimeSlot = item.HourlyOperationCounts
                                                    .Where(h => h.TimeSlot.TimeOfDay >= startTime.TimeOfDay && h.TimeSlot.TimeOfDay < endTime.TimeOfDay)
                                                    .Sum(h => h.OpQuantity);

                                                    if (quantityInTimeSlot > 0)
                                                    {
                                                        <td>@quantityInTimeSlot</td>
                                                    }
                                                    else
                                                    {
                                                        <td>-</td>
                                                    }
                                                }
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </td>
                        </tr>
                        i++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>




@section Styles {
    <style>



        .hiddenRow {
            padding: 0 !important;
        }
    </style>

}
@section Scripts
{


     

  @* <script>
        $(document).ready(function () {

            /* DataTables start here. */

            const dataTable = $('#personelworkTable').DataTable({
                 
                language: {
                    "sDecimal": ",",
                    "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "sInfoEmpty": "Kayıt yok",
                    "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                    "sLoadingRecords": "Yükleniyor...",
                    "sProcessing": "İşleniyor...",
                    "sSearch": "Ara:",
                    "sZeroRecords": "Eşleşen kayıt bulunamadı",
                    "oPaginate": {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    "oAria": {
                        "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "0": "",
                            "1": "1 kayıt seçildi"
                        }
                    }
                }

            });

            function refreshTable() {
                 
            }

       
        });
  </script> *@




}